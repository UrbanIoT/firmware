# SPDX-License-Identifier: Apache-2.0

# Enable USB stack
# CONFIG_USB_DEVICE_STACK=y

# Enable USB Initialize at boot
# CONFIG_USB_DEVICE_INITIALIZE_AT_BOOT=y

# USB device descriptors
# CONFIG_USB_DEVICE_VID=0x2e8a
# CONFIG_USB_DEVICE_PID=0x000a
# CONFIG_USB_DEVICE_PRODUCT="Pico"
# CONFIG_USB_DEVICE_MANUFACTURER="Raspberry Pi"

# USB configuration descriptors
# To avoid draining the tablet's battery. PicoDRO is designed as a self-powered USB device.
# To do so, D1 is removed from the Raspberry Pi Pico and power is supplied from the VSYS pin.
# That's why, when using the PicoDRO hardware, it should be set as a self-powered USB device.

# Set to "n" for bus-powered devices (powered from the USB host) like the Raspberry Pi Pico.
# Set to "y" for self-powered devices (powered from an external power supply) like PicoDRO hardware.
# CONFIG_USB_SELF_POWERED=n

# Depending on your hardware Maximum power consumption needs to be set.
# Set to "125" (250 mA) for the Raspberry Pi Pico (if there is no other external circuitry).
# Set to "1" (2 mA) for the PicoDRO hardware

# Maximum power consumption in 2 mA units
# CONFIG_USB_MAX_POWER=125

# Enable DTR line control for logging when using USB CDC ACM.
# CONFIG_UART_LINE_CTRL=y

# Console drivers
CONFIG_CONSOLE=y

# Set USB log level
# CONFIG_USB_DRIVER_LOG_LEVEL_ERR=y

# Even before the USB serial port is opened at the host, log messages are pushed to the log buffer, then pushed to the USB CDC ACM ring buffer.
# This causes the ring buffer to overflow, and as a result, it adds a new log message saying the "Ring buffer full, drain buffer".
# It creates an endless loop that reproduces the same log message. This causes connection problems, like preventing the port from opening.
# Ring buffer full, drain buffer" log message still exists even if DTR line control is enabled. That's why we set the log level to error.
# Set USB CDC ACM log level
# CONFIG_USB_CDC_ACM_LOG_LEVEL_ERR=y

# CONFIG_WS2812_STRIP_GPIO=y